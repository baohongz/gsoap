setwd('~/workspace/Asmaa/')

# ---------------
# Load libraries
# ---------------
library(openxlsx)
library(pheatmap)
library(ggplot2)
library(reshape2)
library(RColorBrewer)

# ----------
# Load data
# ----------
fname = './data/content/Asmaa_content_normalized_data.xlsx'
content.edata = read.xlsx(fname, sheet = 'normalized.data')

fname = './data/colon/Asmaa_normalized_data.xlsx'
tissues.edata = read.xlsx(fname, sheet = 'normalized.data')

# Keep only endogenous probes
content.edata = subset(content.edata, Code.Class %in% c('Endogenous1', 'Endogenous2'))
tissues.edata = subset(tissues.edata, Code.Class %in% c('Endogenous1', 'Endogenous2'))

# Set probe names as rownames
rownames(content.edata) = content.edata$Name
rownames(tissues.edata) = tissues.edata$Name

# Drop probe data
content.edata = content.edata[,-c(1:3)]
tissues.edata = tissues.edata[,-c(1:3)]

# Get rid miRs with zero stand. dev.
content.edata = content.edata[apply(content.edata, 1, sd) != 0,]
tissues.edata = tissues.edata[apply(tissues.edata, 1, sd) != 0,]

# Reduce to common mirnas
f = function(x){
  ct = cor.test(t(content.edata[x,]), t(tissues.edata[x,]))
  r = ct$estimate
  p = ct$p.value
  return(c(r, p))
}

common.mirs = intersect(rownames(content.edata), rownames(tissues.edata))
corrs = data.frame(t(sapply(common.mirs, f)))
colnames(corrs) = c('Corr', 'P-value')
corrs$FDR = p.adjust(corrs$`P-value`, 'fdr')
corrs = cbind(miRNA = rownames(corrs), corrs)

# -----------------------
# Write the results down
# -----------------------
write.table(corrs, 
            './results/Tissue_vs_content_miRNA_correlations.txt', 
            sep = '\t', 
            col.names = T, 
            row.names = F, 
            quote = F)

# -----------------------
# Load samples meta data
# -----------------------
fname = './src/Asmaa_sample_annotation.txt'
mdata = read.table(fname, sep = '\t', head = T, as.is = T)

# Sample IDs
sample.ids = paste0('X', mdata$SAMPLE.NO.)

# Set sample IDs as rownames
rownames(mdata) = sample.ids

# Keep only certain columns
mdata = mdata[,c('GROUP',	'DAM.NO.',	'PND')]

# Convert to factors
mdata = as.data.frame(apply(mdata, 2, as.factor))

# PND to numeric
mdata$PND = as.numeric(as.character(mdata$PND))

# -------------------------------------------------------------
# Run regression analysis in parallel on content and colon 
# to obtained residuals and calculate correlation between them
# -------------------------------------------------------------
my.cor.analysis = function(m){
  
  y1 = t(content.edata[m,])
  y2 = t(tissues.edata[m,])
  
  # Prepare data
  d1 = cbind(y1, mdata[,c(1, 3)]) 
  d2 = cbind(y2, mdata[,c(1, 3)])
  colnames(d1)[1] = 'y'
  colnames(d2)[1] = 'y'
  
  # Regression and anova
  m1 = lm(y ~ ., data = d1)
  m2 = lm(y ~ ., data = d2)
  
  # Get residuals
  e1 = m1$residuals
  e2 = m2$residuals
  
  # Calc correlation and test
  ct = cor.test(e1, e2)
  
  # Get values
  r = ct$estimate
  p = ct$p.value
  
  # Put together
  res = c(m, r, p)
  
  # Return
  return(res)
}

micorRNAs = intersect(rownames(content.edata), rownames(tissues.edata))
adj.corrs = lapply(micorRNAs, my.cor.analysis)
adj.corrs = do.call(rbind, adj.corrs)
adj.corrs = data.frame(adj.corrs, stringsAsFactors = F)
colnames(adj.corrs) = c('miRNA', 'Adj.correlation', 'P-value')
adj.corrs$FDR = p.adjust(adj.corrs$`P-value`, method = 'fdr')

# -----------------------
# Write the results down
# -----------------------
write.table(adj.corrs, 
            './results/Tissue_vs_content_miRNA_correlations_adusted_group_pnd.txt', 
            sep = '\t', 
            col.names = T, 
            row.names = F, 
            quote = F)
